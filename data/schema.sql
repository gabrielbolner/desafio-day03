DROP TABLE IF EXISTS permission CASCADE;
DROP TABLE IF EXISTS post CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friend CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS comments CASCADE;

CREATE TABLE users (
id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
full_name VARCHAR(255) NOT NULL,
email VARCHAR(100) NOT NULL,
nickname VARCHAR(50),
birthdate DATE ,
profile_image VARCHAR(512),
password VARCHAR(100) NOT NULL,
active BOOLEAN NOT NULL
);
ALTER TABLE users ADD CONSTRAINT pk_user PRIMARY KEY (id);
ALTER TABLE users ADD CONSTRAINT uk_user_email UNIQUE (email);

CREATE TABLE friend (
id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
user_id BIGINT NOT NULL,
friend_id BIGINT NOT NULL,
status VARCHAR(20) NOT NULL
);

ALTER TABLE friend ADD CONSTRAINT fk_friends_user FOREIGN KEY (user_id) REFERENCES users;
ALTER TABLE friend ADD CONSTRAINT fk_user_friends FOREIGN KEY (friend_id) REFERENCES users;
ALTER TABLE friend ADD CONSTRAINT status_check CHECK (status IN ('REQUESTED','ACCEPTED'));

CREATE TABLE permission (
id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
function VARCHAR(100) NOT NULL,
user_id BIGINT NOT NULL
);
ALTER TABLE permission ADD CONSTRAINT pk_permission PRIMARY KEY (id);
ALTER TABLE permission ADD CONSTRAINT uk_permission UNIQUE (function, user_id);
ALTER TABLE permission ADD CONSTRAINT fk_permission_user FOREIGN KEY (user_id) REFERENCES users;

CREATE TABLE post (
id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
post_privacy VARCHAR(50) NOT NULL,
image_content VARCHAR(255),
written_content VARCHAR(255),
inclusion_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
user_id BIGINT
);
ALTER TABLE post ADD CONSTRAINT pk_post PRIMARY KEY (id);
ALTER TABLE post ADD CONSTRAINT fk_post_user FOREIGN KEY (user_id) REFERENCES users;
ALTER TABLE post ADD CONSTRAINT post_privacy_check CHECK (post_privacy IN ('PUBLIC','PRIVATE'));

CREATE TABLE likes(
id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
post_id BIGINT NOT NULL,
user_id BIGINT NOT NULL
);
ALTER TABLE likes ADD CONSTRAINT fk_likes_user FOREIGN KEY (user_id) REFERENCES users;
ALTER TABLE likes ADD CONSTRAINT fk_post_likes FOREIGN KEY (post_id) REFERENCES post;
ALTER TABLE likes ADD CONSTRAINT unq_like_user_post UNIQUE (user_id, post_id);

CREATE TABLE comment(
id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
post_id BIGINT NOT NULL,
user_id BIGINT NOT NULL,
comment VARCHAR(255) NOT NULL
);
ALTER TABLE comment ADD CONSTRAINT fk_comment_user FOREIGN KEY (user_id) REFERENCES users;
ALTER TABLE comment ADD CONSTRAINT fk_post_comment FOREIGN KEY (post_id) REFERENCES post;